name: Build and test

on:
  push:
      branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Compile
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: compileTestKotlin
      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: ./build/reports/tests
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: ./build/test-results
  build-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: echo "All build jobs successful."
  test-integration:
    runs-on: ubuntu-latest
    needs: build-check
    env:
      JIRA_LICENSE: '${{ secrets.JIRA_LICENSE }}'
      TERM: dumb
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Prepare Jira license
        run: echo $JIRA_LICENSE > jira-license.txt
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-west-1
          role-duration-seconds: 14400
      - name: Generate workflow URL
        run: echo "WORKFLOW_URL=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV
      - name: Test integration
        uses: gradle/gradle-build-action@v2
        continue-on-error: true # expect it to sometimes flake
        with:
          gradle-version: wrapper
          arguments: testIntegration
        env:
          USER: ${{ env.WORKFLOW_URL }}
      - name: Test integration # if the last run was green, this should be quick, expect the rerun to be green
        uses: gradle/gradle-build-action@v2
        with:
          arguments: testIntegration
        env:
          USER: ${{ env.WORKFLOW_URL }}
      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: ./build/reports/tests
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: ./build/test-results
